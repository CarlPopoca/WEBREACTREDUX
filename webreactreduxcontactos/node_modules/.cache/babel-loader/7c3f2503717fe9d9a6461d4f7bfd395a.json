{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTREDUXCONTACTOS\\\\webreactreduxcontactos\\\\src\\\\componentes\\\\seguridad\\\\RegistrarUsuario.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AlertaError from '../../componentes/AlertaError';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { saveUsuarios, loginUsuarios } from '../../actions/actionsUsuarios';\n\nclass RegistrarUsuario extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    let loggedIn = true;\n\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      alert_message: '',\n      datosUsuario: {\n        Email: '',\n        Password: '',\n        ConfirmPassword: ''\n      },\n      loggedIn,\n      isNullEmail: '',\n      isNullPassword: '',\n      isNullComfirmPassword: ''\n    };\n  }\n\n  ingresoUsuario() {\n    this.props.loginUsuarios(this.state.datosUsuario).then(response => {\n      //Se genera el token\n      localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\"); //Se setea que ingreso\n\n      this.setState({\n        loggedIn: true,\n        alert_message: '',\n        datosUsuario: {\n          Email: '',\n          Password: '',\n          ConfirmPassword: ''\n        }\n      });\n    }, err => err.response.json().then(() => {\n      //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \n      //coinciden con el tipo de dato \n      this.setState({\n        isError: 'true',\n        alert_message: 'No se pudo agregar el usuario'\n      });\n    })).catch(error => {\n      //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \n      //  es superior al campo de la base de datos\n      this.setState({\n        isError: 'true',\n        alert_message: 'No se pudo agregar el usuario'\n      });\n    });\n  }\n\n  validacionControles() {\n    if (this.state.datosUsuario.Email == '' && this.state.datosUsuario.Password == '' && this.state.datosUsuario.ConfirmPassword == '') {\n      this.setState({\n        alert_message: 'Introduzca los datos que se le solicitan',\n        isNullEmail: 'true',\n        isNullPassword: 'true',\n        isNullComfirmPassword: 'true'\n      });\n      return false;\n    }\n\n    if (this.state.datosUsuario.Password.length < 10) {\n      this.setState({\n        alert_message: 'El password debe tener diez caracteres',\n        isNullPassword: 'true'\n      });\n      return false;\n    }\n\n    if (this.state.datosUsuario.ConfirmPassword.length < 10) {\n      this.setState({\n        alert_message: 'La confirmación del password debe tener diez caracteres',\n        isNullComfirmPassword: 'true'\n      });\n      return false;\n    }\n\n    if (this.state.datosUsuario.Password != this.state.datosUsuario.ConfirmPassword) {\n      this.setState({\n        alert_message: 'El password y la confirmación del password deben ser indenticos',\n        isNullPassword: 'true',\n        isNullComfirmPassword: 'true'\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  submitForm() {\n    let valControles = this.validacionControles();\n\n    if (valControles) {\n      this.props.saveUsuarios(this.state.datosUsuario).then(response => {\n        this.ingresoUsuario();\n      }, err => err.response.json().then(() => {\n        //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \n        //coinciden con el tipo de dato \n        this.setState({\n          isError: 'true',\n          alert_message: 'No se pudo agregar el usuario'\n        });\n      })).catch(error => {\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \n        //  es superior al campo de la base de datos\n        this.setState({\n          isError: 'true',\n          alert_message: 'No se pudo agregar el usuario'\n        });\n      });\n    }\n  }\n\n  validacionBoton(e) {\n    if (e == 'true') {\n      return 'red-icon';\n    }\n\n    if (e == 'false') {\n      return 'green-icon';\n    }\n\n    return '';\n  }\n\n  render() {\n    if (this.state.loggedIn === true) {\n      //Otra forma de hacer redirect\n      // this.props.history.push(\"/\")\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      id: \"cover-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.alert_message != \"\" ? React.createElement(AlertaError, {\n      mensaje: this.state.alert_message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      id: \"container\",\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6 offset-sm-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"col-sm-7 display-5  my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Registrar\"), React.createElement(\"div\", {\n      className: \"info-form col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-text bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.validacionBoton(this.state.isNullEmail),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"  \", React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"user-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Usuario\",\n      name: \"nombreUsuario\",\n      value: this.state.datosUsuario.Email,\n      onChange: e => {\n        let datosUsuario = this.state.datosUsuario;\n        datosUsuario.Email = e.target.value;\n        this.setState({\n          datosUsuario\n        });\n      },\n      required: \"true\",\n      onBlur: e => {\n        if (e.target.value == '') {\n          this.setState({\n            isNullEmail: 'true'\n          });\n        } else {\n          this.setState({\n            isNullEmail: 'false',\n            alert_message: ''\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-text bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.validacionBoton(this.state.isNullPassword),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"  \", React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.datosUsuario.Password,\n      onChange: e => {\n        let datosUsuario = this.state.datosUsuario;\n        datosUsuario.Password = e.target.value;\n        this.setState({\n          datosUsuario\n        });\n      },\n      required: \"true\",\n      maxlength: \"10\",\n      minlength: \"10\",\n      onBlur: e => {\n        if (e.target.value == '') {\n          this.setState({\n            isNullPassword: 'true'\n          });\n        } else {\n          this.setState({\n            isNullPassword: 'false',\n            alert_message: ''\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-text bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: this.validacionBoton(this.state.isNullComfirmPassword),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"  \", React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"Confirmar password\",\n      name: \"confirmarPassword\",\n      value: this.state.datosUsuario.ConfirmPassword,\n      onChange: e => {\n        let datosUsuario = this.state.datosUsuario;\n        datosUsuario.ConfirmPassword = e.target.value;\n        this.setState({\n          datosUsuario\n        });\n      },\n      required: \"true\",\n      maxlength: \"10\",\n      minlength: \"10\",\n      onBlur: e => {\n        if (e.target.value == '') {\n          this.setState({\n            isNullComfirmPassword: 'true'\n          });\n        } else {\n          this.setState({\n            isNullComfirmPassword: 'false',\n            alert_message: ''\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.submitForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"mr-1\",\n      icon: \"database\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), \"Guardar\")))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    usuarios: state.usuarios\n  };\n}\n\nexport default connect(mapStateToProps, {\n  saveUsuarios,\n  loginUsuarios\n})(RegistrarUsuario);","map":{"version":3,"sources":["C:\\PROYECTOS\\VisualStudioNET\\WEBREACTREDUXCONTACTOS\\webreactreduxcontactos\\src\\componentes\\seguridad\\RegistrarUsuario.js"],"names":["React","Component","Fragment","Redirect","AlertaError","FontAwesomeIcon","saveUsuarios","loginUsuarios","RegistrarUsuario","constructor","props","token","localStorage","getItem","loggedIn","state","alert_message","datosUsuario","Email","Password","ConfirmPassword","isNullEmail","isNullPassword","isNullComfirmPassword","ingresoUsuario","then","response","setItem","setState","err","json","isError","catch","error","validacionControles","length","submitForm","valControles","validacionBoton","e","render","target","value","bind","mapStateToProps","usuarios","connect"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport AlertaError from '../../componentes/AlertaError';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {saveUsuarios, loginUsuarios} from '../../actions/actionsUsuarios';\r\n\r\nclass RegistrarUsuario extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      alert_message:'',\r\n      datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        ConfirmPassword: ''\r\n      },\r\n      loggedIn,\r\n      isNullEmail: '',\r\n      isNullPassword: '',\r\n      isNullComfirmPassword: ''\r\n    }\r\n  }\r\n  ingresoUsuario()\r\n  {\r\n      this.props.loginUsuarios(this.state.datosUsuario).then(\r\n        (response)=>{\r\n          //Se genera el token\r\n          localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\");\r\n            //Se setea que ingreso\r\n            this.setState({\r\n              loggedIn: true,\r\n              alert_message: '',\r\n              datosUsuario: {\r\n                Email: '',\r\n                Password: '',\r\n                ConfirmPassword: ''\r\n                  }\r\n                });\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            isError:'true',\r\n            alert_message: 'No se pudo agregar el usuario'\r\n          })\r\n        })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          isError:'true',\r\n          alert_message: 'No se pudo agregar el usuario'\r\n        });\r\n      });\r\n  }\r\n\r\n   validacionControles() {\r\n\r\n     if (this.state.datosUsuario.Email=='' && this.state.datosUsuario.Password=='' && this.state.datosUsuario.ConfirmPassword=='')\r\n     {\r\n       this.setState({\r\n         alert_message: 'Introduzca los datos que se le solicitan',\r\n         isNullEmail: 'true',\r\n         isNullPassword: 'true',\r\n         isNullComfirmPassword: 'true'\r\n       });\r\n       return false;\r\n     }\r\n\r\n     if (this.state.datosUsuario.Password.length < 10)\r\n     {\r\n       this.setState({\r\n         alert_message: 'El password debe tener diez caracteres',\r\n         isNullPassword: 'true',\r\n       });\r\n        return false;\r\n     }\r\n    if (this.state.datosUsuario.ConfirmPassword.length < 10)\r\n    {\r\n      this.setState({\r\n        alert_message: 'La confirmación del password debe tener diez caracteres',\r\n        isNullComfirmPassword: 'true',\r\n      });\r\n       return false;\r\n    }\r\n    if (this.state.datosUsuario.Password != this.state.datosUsuario.ConfirmPassword)\r\n    {\r\n      this.setState({\r\n        alert_message: 'El password y la confirmación del password deben ser indenticos',\r\n        isNullPassword: 'true',\r\n        isNullComfirmPassword: 'true'\r\n      });\r\n      return false;\r\n    }\r\n     return true;\r\n  }\r\n\r\n  submitForm()\r\n  {\r\n    let valControles = this.validacionControles();\r\n    if (valControles){\r\n\r\n      this.props.saveUsuarios(this.state.datosUsuario).then(\r\n        (response)=>{\r\n          this.ingresoUsuario();\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            isError:'true',\r\n            alert_message: 'No se pudo agregar el usuario'\r\n          })\r\n        }\r\n        )\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          isError:'true',\r\n          alert_message: 'No se pudo agregar el usuario'\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\nvalidacionBoton(e){\r\n  if (e == 'true'){\r\n    return 'red-icon'\r\n  }\r\n  if (e == 'false'){\r\n    return 'green-icon'\r\n  }\r\n  return '';\r\n}\r\n\r\nrender(){\r\n  if (this.state.loggedIn===true){\r\n    //Otra forma de hacer redirect\r\n    // this.props.history.push(\"/\")\r\n    return <Redirect  to=\"/\" />\r\n  }\r\n  return (\r\n\r\n    <div id=\"cover-caption\">\r\n\r\n        {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        <div id=\"container\" className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-4 text-center\">\r\n                    <h1 className=\"col-sm-7 display-5  my-4\">Registrar</h1>\r\n                    <div className=\"info-form col-sm-7\">\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text bg-white\">\r\n                                  <i className= {this.validacionBoton(this.state.isNullEmail)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"user-circle\" /></i>\r\n                                </div>\r\n                              </div>\r\n                              <input type=\"email\" className=\"form-control\" type= \"text\" placeholder=\"Usuario\" name=\"nombreUsuario\" value={this.state.datosUsuario.Email} onChange={(e)=>{\r\n                                let {datosUsuario} = this.state;\r\n                                datosUsuario.Email = e.target.value;\r\n                                this.setState({datosUsuario});\r\n                              }} required=\"true\"\r\n                              onBlur={(e)=>{\r\n                                if (e.target.value == '')\r\n                                  {\r\n                                    this.setState({isNullEmail: 'true'});\r\n                                  }else {\r\n                                    this.setState({isNullEmail: 'false', alert_message: ''});\r\n                                  }\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input className=\"form-control\" type= \"password\" placeholder=\"Password\" name=\"password\" value={this.state.datosUsuario.Password} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.Password = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullPassword: 'true'});\r\n                                    }else {\r\n                                      this.setState({isNullPassword: 'false', alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullComfirmPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input className=\"form-control\" type= \"password\" placeholder=\"Confirmar password\" name=\"confirmarPassword\" value={this.state.datosUsuario.ConfirmPassword} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.ConfirmPassword = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullComfirmPassword: 'true'});\r\n                                    }else {\r\n                                      this.setState({isNullComfirmPassword: 'false', alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                 <button className=\"btn btn-success\" onClick={this.submitForm.bind(this)}>\r\n                                   <FontAwesomeIcon className=\"mr-1\" icon=\"database\" />\r\n                                   Guardar</button>\r\n                            </div>\r\n                      </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\nfunction mapStateToProps (state)\r\n{\r\n  return {\r\n    usuarios: state.usuarios\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {saveUsuarios, loginUsuarios})(RegistrarUsuario);\r\n"]},"metadata":{},"sourceType":"module"}