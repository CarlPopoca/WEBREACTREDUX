{"ast":null,"code":"import _classCallCheck from\"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTREDUXCONTACTOS\\\\webreactreduxcontactos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTREDUXCONTACTOS\\\\webreactreduxcontactos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTREDUXCONTACTOS\\\\webreactreduxcontactos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _createClass from\"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTREDUXCONTACTOS\\\\webreactreduxcontactos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\PROYECTOS\\\\VisualStudioNET\\\\WEBREACTREDUXCONTACTOS\\\\webreactreduxcontactos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Label,FormGroup,Input,Modal,ModalHeader,ModalBody,ModalFooter,Table,Button}from'reactstrap';import{Redirect}from'react-router-dom';import{confirmAlert}from'react-confirm-alert';import'react-confirm-alert/src/react-confirm-alert.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{connect}from'react-redux';import ContactosList from'./ContactosList';import{fetchContactos,saveContactos,updateContactos,deleteContactos}from'../actions/actionsContactos';import AlertaError from'./AlertaError';/*import Navegacion from './Navegacion';*/ //Una Clase que extiende del component de React se comvierte en una etiqueta html\nvar Contactos=/*#__PURE__*/function(_Component){_inherits(Contactos,_Component);_createClass(Contactos,[{key:\"componentDidMount\",value:function componentDidMount(){this.refrescarContactos();}}]);function Contactos(props){var _this;_classCallCheck(this,Contactos);_this=_possibleConstructorReturn(this,_getPrototypeOf(Contactos).call(this,props));var token=localStorage.getItem(\"token\");var loggedIn=true;if(token==null){loggedIn=false;}_this.state={isErrorContactos:false,loading:false,isError:'',isNullNombre:'',isNullCelular:'',isNullSexo:'',alert_message:'',datosNuevoContacto:{Nombre:'',Celular:'',Sexo:''},datosEditarContacto:{Id:'',Nombre:'',Celular:'',Sexo:''},nuevoContactoModal:false,editarContactoModal:false,loggedIn:loggedIn};return _this;}//Se declara en el objeto state las variables que mantendran el valor\n//Contactos - Los datos que llenaran el Table\n//datosNuevoContacto - Los datos para la Alta\n//datosEditarContacto - Los datos para la modificación\n//nuevoContactoModal - Para la visualización y cierre de la ventana modal de Alta\n//editarContactoModal - Para la visualización  y cierre de la ventana modal de modificación\n//Método que refrescara el Table\n_createClass(Contactos,[{key:\"refrescarContactos\",value:function refrescarContactos(){var _this2=this;this.props.fetchContactos().then(function(results){_this2.setState({isErrorContactos:false,alert_message:''});}).catch(function(error){_this2.setState({isErrorContactos:true,alert_message:'Error al obtener los contactos'});});}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){}//entra cada vez que se ejecuta un evento transaccional\n//Método que niega el valor de la variable nuevoContactoModal inicializada en false, esto\n//permite mostrar el Modal para la Alta y inicializa los datos del objeto datosNuevoContacto, y\n//Se regresa el valor de la variable nuevoContactoModal a false cuando se pulsa el botón de cerrar y\n//cuando se pulsa el botón de cancelar\n},{key:\"toggleNuevoContactoModal\",value:function toggleNuevoContactoModal(){this.setState({isErrorContactos:false,isError:'',isNullNombre:'',isNullCelular:'',isNullSexo:'',alert_message:'',nuevoContactoModal:!this.state.nuevoContactoModal,datosNuevoContacto:{Nombre:'',Celular:'',Sexo:''}});}//Método que niega el valor de la variable editarContactoModal inicializada en false, esto\n//permite mostrar el Modal para la Modificación y\n//se regresa el valor de la variable editarContactoModal a false cuando se pulsa el botón de cerrar y\n//cuando se pulsa el botón de cancelar\n},{key:\"toggleEditarContactoModal\",value:function toggleEditarContactoModal(){//Este metodo se dispara cuando se cierra la ventana modal de editar, y cuando se pulsa el botón de Cancelar\n// convierte el valor de la variable editarContactoModal a false\nthis.setState({editarContactoModal:!this.state.editarContactoModal});}},{key:\"validacionInput\",value:function validacionInput(e){if(e==='true'){return{borderColor:'#dc3545'};}if(e==='false'){return{borderColor:'#28a745'};}return{borderColor:'none'};}},{key:\"validarContacto\",value:function validarContacto(contacto){var nombre='false',celular='false',sexo='false',alert='',valAlert=false,valContacto=true;if(contacto.Nombre===''){nombre='true';valAlert=true;}if(contacto.Celular===''){celular='true';valAlert=true;}if(contacto.Sexo===''){sexo='true';valAlert=true;}if(valAlert){alert='Introduzca la información que se le solicita';valContacto=false;}this.setState({isError:'',isNullNombre:nombre,isNullCelular:celular,isNullSexo:sexo,alert_message:alert});return valContacto;}//Método que permite guardar los datos capturados en el modal de Alta\n},{key:\"agregarContacto\",value:function agregarContacto(){var _this3=this;var _this$state$datosNuev=this.state.datosNuevoContacto,Nombre=_this$state$datosNuev.Nombre,Celular=_this$state$datosNuev.Celular,Sexo=_this$state$datosNuev.Sexo;if(this.validarContacto(this.state.datosNuevoContacto)){this.setState({loading:true});this.props.saveContactos({Nombre:Nombre,Celular:Celular,Sexo:Sexo}).then(function(response){//Se setea la variable de state contactos, los simbolo {} permiten usarla para setearla por medio de let\n//this.state contiene los contactos que se renderizaron en el Table\nvar contactos=_this3.state.contactos;//Se agrega al final el contacto que devolvio el metodo post de la api contactos\n//contactos.push(response.data);\n//Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\n_this3.setState({loading:false,contactos:contactos,nuevoContactoModal:false,datosNuevoContacto:{Nombre:'',Celular:'',Sexo:''},alert_message:'',isNullNombre:'',isNullCelular:'',isNullSexo:''});},function(err){return err.response.json().then(function(){//Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \n//coinciden con el tipo de dato \n_this3.setState({loading:false,isError:'true',alert_message:'No se pudo agregar el contacto'});});}).catch(function(error){//entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \n//  es superior al campo de la base de datos\n_this3.setState({loading:false,isError:'true',alert_message:'No se pudo agregar el contacto'});});}}//Método que permite guardar los datos capturados en el modal de Modificación\n},{key:\"actualizarContacto\",value:function actualizarContacto(){var _this4=this;var _this$state$datosEdit=this.state.datosEditarContacto,Id=_this$state$datosEdit.Id,Nombre=_this$state$datosEdit.Nombre,Celular=_this$state$datosEdit.Celular,Sexo=_this$state$datosEdit.Sexo;if(this.validarContacto(this.state.datosEditarContacto)){this.setState({loading:true});this.props.updateContactos({Id:Id,Nombre:Nombre,Celular:Celular,Sexo:Sexo}).then(function(){//Se refresca el Table\n_this4.refrescarContactos();//Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\n_this4.setState({loading:false,editarContactoModal:false,datosEditarContacto:{Id:'',Nombre:'',Celular:'',Sexo:''},alert_message:'',isNullNombre:'',isNullCelular:'',isNullSexo:''});},function(err){return err.response.json().then(function(){_this4.setState({loading:false,isError:'true',alert_message:'No se pudo actualizar el contacto'});});}).catch(function(error){//entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \n//  es superior al campo de la base de datos\n_this4.setState({loading:false,isError:'true',alert_message:'No se pudo actualizar el contacto'});});}}//Método para eliminar un Contacto\n},{key:\"eliminarContacto\",value:function eliminarContacto(id){var _this5=this;confirmAlert({customUI:function customUI(_ref){var onClose=_ref.onClose;return React.createElement(\"div\",{className:\"custom-ui\"},React.createElement(\"h1\",{className:\"glyphicon glyphicon-warning-sign\"},React.createElement(FontAwesomeIcon,{className:\"mr-3\",icon:\"exclamation-triangle\"}),\"Esta seguro de eliminar el registro?\"),React.createElement(\"div\",{className:\"btn-toolbar row\",role:\"toolbar\"},React.createElement(\"div\",{className:\"col-sm-4\"}),React.createElement(\"div\",{className:\"btn-group col-sm-4\"},React.createElement(Button,{color:\"secondary\",size:\"sm\",className:\"mr-3\",onClick:onClose},React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"times\"}),\"No\"),React.createElement(Button,{color:\"primary\",size:\"sm\",className:\"btn btn-default \",onClick:function onClick(){_this5.props.deleteContactos(id).then(function(){//Se refresca el Table\n_this5.refrescarContactos();onClose();},function(error){return error.response.json().then(function(){_this5.setState({isError:'true',alert_message:'No se pudo eliminar el contacto'});});}).catch(function(error){//entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \n//  es superior al campo de la base de datos\n_this5.setState({isError:'true',alert_message:'No se pudo eliminar el contacto'});});}},React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"check\"}),\"Si\")),React.createElement(\"div\",{className:\"col-sm-4\"})));}});}//Nota: this.state mantiene el estado de las variables, es como un get pero para setear una  variables\n// se debe ocupar\n//Método para actualizar los datos\n},{key:\"editarContacto\",value:function editarContacto(Id,Nombre,Celular,Sexo){//Por default la variable editarContactoModal es false pero se niega este valor seteando a verdadero,\n// y de esta manera se consigue visualizar el modal de mdificación y setearle los datos a los controles\nthis.validarContacto({Id:Id,Nombre:Nombre,Celular:Celular,Sexo:Sexo});this.setState({datosEditarContacto:{Id:Id,Nombre:Nombre,Celular:Celular,Sexo:Sexo},editarContactoModal:!this.state.editarContactoModal});}},{key:\"validacionControles\",value:function validacionControles(){if((this.state.isNullNombre==='true'||this.state.isNullCelular==='true'||this.state.isNullSexo==='true')&&this.state.alert_message!=''||this.state.isError==='true')return true;else return false;}},{key:\"render\",value:function render(){var _this6=this;var loading=this.state.loading;var isErrorContactos=this.state.isErrorContactos;if(this.state.loggedIn==false){return React.createElement(Redirect,{to:\"/\"});}//Se setea a la variable local contactosReg el objeto contactos que se lleno al ejecutarse el método\n//componentWillMount en automatico y se retorna las filas del Table más una columna con los botones de\n//Editar y eliminar\nvar contactosReg=this.props.contactos.map(function(contacto){return React.createElement(\"tr\",{key:contacto.Id},React.createElement(\"td\",null,contacto.Id),React.createElement(\"td\",null,contacto.Nombre),React.createElement(\"td\",null,\" \",contacto.Celular),React.createElement(\"td\",null,\" \",contacto.Sexo),React.createElement(\"td\",null,React.createElement(Button,{color:\"success\",size:\"sm\",className:\"mr-2\",onClick:_this6.editarContacto.bind(_this6,contacto.Id,contacto.Nombre,contacto.Celular,contacto.Sexo)},\"Editar\"),React.createElement(Button,{color:\"danger\",size:\"sm\",onClick:_this6.eliminarContacto.bind(_this6,contacto.Id)},\"Eliminar\")));});// El botón Agregar cambia a true la variable nuevoContactoModal por medio del metodo toggleNuevoContactoModal\n//Modal para modificar datos se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable nuevoContactoModal\n//y se cierra cuando la misma variable cambia a false al presionarse los botones cerrar (x) y cancelar\n//Modal para modificar datos  se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable editarContactoModal\n//y se cierra cuando la misma variable cambia a false al presionarse los botones de cerrar (x) y cancelar\n//ModalHeader: Encabezado del Modal\n//ModalBody: Contenedor de controles\n//ModalFooter:  Pie del Modal, se utiliza comunmente para añadir botones\n//FormGroup: Agrupador de Controles\n//Input propiedad value : se le puede ligar una propiedad de un objeto state, y con el método onChange asignarle\n//al value lo que se captura.\n// let {datosNuevoContacto} = this.state;,  se setea el estado y se almacena lo que se captura\n// datosNuevoContacto.Nombre = e.target.value;, se setea lo que se captura en el input en la propiedad que se indica\n// this.setState({datosNuevoContacto});, se confirma el seteo de la propiedad del objeto\n//<tbody>{contactosReg}</tbody>, la variable local contactosReg proporciona los filas del Table\nreturn React.createElement(\"div\",{id:\"divContactos\"},React.createElement(\"div\",{className:\"App container\"},React.createElement(\"h2\",null,\"Aplicaci\\xF3n de Contactos\"),isErrorContactos?React.createElement(AlertaError,{mensaje:this.state.alert_message}):null,React.createElement(Button,{className:\"my-3\",color:\"primary\",onClick:this.toggleNuevoContactoModal.bind(this)},\"Agregar\"),React.createElement(Modal,{isOpen:this.state.nuevoContactoModal,toggle:this.toggleNuevoContactoModal.bind(this)},React.createElement(ModalHeader,{toggle:this.toggleNuevoContactoModal.bind(this)},\"Agregar un Contacto\"),React.createElement(ModalBody,null,this.validacionControles()?React.createElement(AlertaError,{mensaje:this.state.alert_message}):null,React.createElement(FormGroup,null,React.createElement(Label,{for:\"Nombre\"},\"Nombre\"),React.createElement(Input,{id:\"Nombre\",style:this.validacionInput(this.state.isNullNombre),onChange:function onChange(e){var datosNuevoContacto=_this6.state.datosNuevoContacto;datosNuevoContacto.Nombre=e.target.value;_this6.setState({datosNuevoContacto:datosNuevoContacto});},required:\"true\",maxlength:\"100\",onKeyUp:true,onBlur:function onBlur(e){if(e.target.value==''){_this6.setState({isNullNombre:'true'});}else{_this6.setState({isNullNombre:'false'});}}})),React.createElement(FormGroup,null,React.createElement(Label,{for:\"Celular\"},\"Celular\"),React.createElement(Input,{id:\"Celular\",style:this.validacionInput(this.state.isNullCelular),value:this.state.datosNuevoContacto.Celular,onChange:function onChange(e){var regex=/[^+\\d]/g;var datosNuevoContacto=_this6.state.datosNuevoContacto;datosNuevoContacto.Celular=e.target.value.replace(regex,\"\");_this6.setState({datosNuevoContacto:datosNuevoContacto});},required:\"true\",onBlur:function onBlur(e){if(e.target.value==''){_this6.setState({isNullCelular:'true'});}else{_this6.setState({isNullCelular:'false'});}}})),React.createElement(FormGroup,null,React.createElement(Label,{for:\"Sexo\"},\"Sexo\"),React.createElement(Input,{id:\"Sexo\",style:this.validacionInput(this.state.isNullSexo),value:this.state.datosNuevoContacto.Sexo,onChange:function onChange(e){var datosNuevoContacto=_this6.state.datosNuevoContacto;datosNuevoContacto.Sexo=e.target.value;_this6.setState({datosNuevoContacto:datosNuevoContacto});},required:\"true\",maxlength:\"3\",minlength:\"3\",onBlur:function onBlur(e){if(e.target.value==''){_this6.setState({isNullSexo:'true'});}else{_this6.setState({isNullSexo:'false'});}}}))),React.createElement(ModalFooter,null,React.createElement(Button,{color:\"primary\",onClick:this.agregarContacto.bind(this)},loading?React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"sync-alt\",spin:true}):React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"database\"}),\"Guardar\"),React.createElement(Button,{color:\"secondary\",onClick:this.toggleNuevoContactoModal.bind(this)},React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"times\"}),\"Cancelar\"))),React.createElement(Modal,{isOpen:this.state.editarContactoModal,toggle:this.toggleEditarContactoModal.bind(this)},React.createElement(ModalHeader,{toggle:this.toggleEditarContactoModal.bind(this)},\"Editar un Contacto\"),React.createElement(ModalBody,null,this.validacionControles()?React.createElement(AlertaError,{mensaje:this.state.alert_message}):null,React.createElement(FormGroup,null,React.createElement(Label,{for:\"Nombre\"},\"Nombre\"),React.createElement(Input,{id:\"Nombre\",style:this.validacionInput(this.state.isNullNombre),value:this.state.datosEditarContacto.Nombre,onChange:function onChange(e){var datosEditarContacto=_this6.state.datosEditarContacto;datosEditarContacto.Nombre=e.target.value;_this6.setState({datosEditarContacto:datosEditarContacto});},required:\"true\",maxlength:\"100\",onBlur:function onBlur(e){if(e.target.value==''){_this6.setState({isNullNombre:'true'});}else{_this6.setState({isNullNombre:'false'});}}})),React.createElement(FormGroup,null,React.createElement(Label,{for:\"Celular\"},\"Celular\"),React.createElement(Input,{id:\"Celular\",style:this.validacionInput(this.state.isNullCelular),value:this.state.datosEditarContacto.Celular,onChange:function onChange(e){var regex=/[^+\\d]/g;var datosEditarContacto=_this6.state.datosEditarContacto;datosEditarContacto.Celular=e.target.value.replace(regex,\"\");_this6.setState({datosEditarContacto:datosEditarContacto});},required:\"true\",onBlur:function onBlur(e){if(e.target.value==''){_this6.setState({isNullCelular:'true'});}else{_this6.setState({isNullCelular:'false'});}}})),React.createElement(FormGroup,null,React.createElement(Label,{for:\"Sexo\"},\"Sexo\"),React.createElement(Input,{id:\"Sexo\",style:this.validacionInput(this.state.isNullSexo),value:this.state.datosEditarContacto.Sexo,onChange:function onChange(e){var datosEditarContacto=_this6.state.datosEditarContacto;datosEditarContacto.Sexo=e.target.value;_this6.setState({datosEditarContacto:datosEditarContacto});},required:\"true\",maxlength:\"3\",minlength:\"3\",onBlur:function onBlur(e){if(e.target.value==''){_this6.setState({isNullSexo:'true'});}else{_this6.setState({isNullSexo:'false'});}}}))),React.createElement(ModalFooter,null,React.createElement(Button,{color:\"primary\",onClick:this.actualizarContacto.bind(this)},loading?React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"sync-alt\",spin:true}):React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"database\"}),\"Guardar\"),React.createElement(Button,{color:\"secondary\",onClick:this.toggleEditarContactoModal.bind(this)},React.createElement(FontAwesomeIcon,{className:\"mr-2\",icon:\"times\"}),\"Cancelar\"))),React.createElement(Table,null,React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"#\"),React.createElement(\"th\",null,\"Nombre\"),React.createElement(\"th\",null,\"Celular\"),React.createElement(\"th\",null,\"Sexo\"),React.createElement(\"th\",null,\"Acciones\"))),React.createElement(\"tbody\",null,contactosReg))));}}]);return Contactos;}(Component);function mapStateToProps(state){return{contactos:state.contactos};}export default connect(mapStateToProps,{fetchContactos:fetchContactos,saveContactos:saveContactos,updateContactos:updateContactos,deleteContactos:deleteContactos})(Contactos);","map":{"version":3,"sources":["C:\\PROYECTOS\\VisualStudioNET\\WEBREACTREDUXCONTACTOS\\webreactreduxcontactos\\src\\componentes\\Contactos.js"],"names":["React","Component","Label","FormGroup","Input","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","Redirect","confirmAlert","FontAwesomeIcon","connect","ContactosList","fetchContactos","saveContactos","updateContactos","deleteContactos","AlertaError","Contactos","refrescarContactos","props","token","localStorage","getItem","loggedIn","state","isErrorContactos","loading","isError","isNullNombre","isNullCelular","isNullSexo","alert_message","datosNuevoContacto","Nombre","Celular","Sexo","datosEditarContacto","Id","nuevoContactoModal","editarContactoModal","then","results","setState","catch","error","nextProps","e","borderColor","contacto","nombre","celular","sexo","alert","valAlert","valContacto","validarContacto","response","contactos","err","json","id","customUI","onClose","contactosReg","map","editarContacto","bind","eliminarContacto","toggleNuevoContactoModal","validacionControles","validacionInput","target","value","regex","replace","agregarContacto","toggleEditarContactoModal","actualizarContacto","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Label, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button} from 'reactstrap';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {connect} from 'react-redux';\r\nimport ContactosList from './ContactosList';\r\nimport {fetchContactos, saveContactos, updateContactos, deleteContactos} from '../actions/actionsContactos';\r\nimport AlertaError from './AlertaError';\r\n/*import Navegacion from './Navegacion';*/\r\n//Una Clase que extiende del component de React se comvierte en una etiqueta html\r\nclass Contactos extends Component  {\r\n\r\n  componentDidMount()\r\n  {\r\n    this.refrescarContactos();\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      isErrorContactos:false,\r\n      loading: false,\r\n      isError:'',\r\n      isNullNombre: '',\r\n      isNullCelular: '',\r\n      isNullSexo: '',\r\n      alert_message:'',\r\n      datosNuevoContacto: {\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      },\r\n      datosEditarContacto: {\r\n        Id: '',\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      },\r\n      nuevoContactoModal: false,\r\n      editarContactoModal: false,\r\n      loggedIn\r\n    }\r\n  }\r\n  //Se declara en el objeto state las variables que mantendran el valor\r\n  //Contactos - Los datos que llenaran el Table\r\n  //datosNuevoContacto - Los datos para la Alta\r\n  //datosEditarContacto - Los datos para la modificación\r\n  //nuevoContactoModal - Para la visualización y cierre de la ventana modal de Alta\r\n //editarContactoModal - Para la visualización  y cierre de la ventana modal de modificación\r\n\r\n //Método que refrescara el Table\r\n  refrescarContactos(){\r\n    this.props.fetchContactos().then(\r\n      (results) => {\r\n        this.setState({\r\n          isErrorContactos: false,\r\n          alert_message: ''\r\n        });\r\n      }\r\n    ).catch(error=>{\r\n      this.setState({\r\n        isErrorContactos: true,\r\n        alert_message: 'Error al obtener los contactos'\r\n      });\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n     //entra cada vez que se ejecuta un evento transaccional\r\n  }\r\n//Método que niega el valor de la variable nuevoContactoModal inicializada en false, esto\r\n//permite mostrar el Modal para la Alta y inicializa los datos del objeto datosNuevoContacto, y\r\n//Se regresa el valor de la variable nuevoContactoModal a false cuando se pulsa el botón de cerrar y\r\n//cuando se pulsa el botón de cancelar\r\n  toggleNuevoContactoModal() {\r\n    this.setState({\r\n      isErrorContactos: false,\r\n      isError:'',\r\n      isNullNombre:'',\r\n      isNullCelular:'',\r\n      isNullSexo:'',\r\n      alert_message:'',\r\n      nuevoContactoModal: !this.state.nuevoContactoModal,\r\n      datosNuevoContacto: {\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      }\r\n    });\r\n  }\r\n  //Método que niega el valor de la variable editarContactoModal inicializada en false, esto\r\n  //permite mostrar el Modal para la Modificación y\r\n  //se regresa el valor de la variable editarContactoModal a false cuando se pulsa el botón de cerrar y\r\n  //cuando se pulsa el botón de cancelar\r\n  toggleEditarContactoModal() {\r\n    //Este metodo se dispara cuando se cierra la ventana modal de editar, y cuando se pulsa el botón de Cancelar\r\n    // convierte el valor de la variable editarContactoModal a false\r\n  this.setState({\r\n    editarContactoModal: !this.state.editarContactoModal\r\n  });\r\n}\r\nvalidacionInput(e){\r\n  if (e === 'true'){\r\n    return {borderColor: '#dc3545'}\r\n  }\r\n  if (e === 'false'){\r\n    return  {borderColor: '#28a745'}\r\n  }\r\n  return  {borderColor: 'none'};\r\n}\r\n\r\nvalidarContacto(contacto) {\r\n  var nombre='false', celular='false', sexo='false', alert='', valAlert=false, valContacto= true;\r\n  if (contacto.Nombre ==='')\r\n  {\r\n    nombre ='true';\r\n    valAlert=true;\r\n  }\r\n  if (contacto.Celular ==='')\r\n  {\r\n    celular = 'true';\r\n    valAlert=true;\r\n  }\r\n  if (contacto.Sexo ==='')\r\n  {\r\n    sexo = 'true';\r\n    valAlert=true;\r\n  }\r\n  if (valAlert) {\r\n    alert = 'Introduzca la información que se le solicita'\r\n    valContacto = false;\r\n  }\r\n  this.setState({\r\n    isError:'',\r\n    isNullNombre: nombre,\r\n    isNullCelular: celular,\r\n    isNullSexo: sexo,\r\n    alert_message: alert\r\n  });\r\n  return valContacto;\r\n}\r\n\r\n\r\n//Método que permite guardar los datos capturados en el modal de Alta\r\n  agregarContacto (){\r\n    let {Nombre, Celular, Sexo} = this.state.datosNuevoContacto;\r\n    if (this.validarContacto(this.state.datosNuevoContacto)) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.saveContactos({Nombre, Celular, Sexo}).then(\r\n        (response)=>{\r\n          //Se setea la variable de state contactos, los simbolo {} permiten usarla para setearla por medio de let\r\n          //this.state contiene los contactos que se renderizaron en el Table\r\n            let {contactos} = this.state;\r\n            //Se agrega al final el contacto que devolvio el metodo post de la api contactos\r\n            //contactos.push(response.data);\r\n            //Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\r\n            this.setState({\r\n              loading: false,\r\n              contactos, \r\n              nuevoContactoModal:false, \r\n              datosNuevoContacto: {\r\n              Nombre: '',\r\n              Celular: '',\r\n              Sexo: ''\r\n            }, \r\n            alert_message: '',\r\n            isNullNombre: '', \r\n            isNullCelular:'', \r\n            isNullSexo: ''});\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            loading: false,\r\n            isError: 'true',\r\n            alert_message: 'No se pudo agregar el contacto'\r\n          })\r\n        })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError: 'true',\r\n          alert_message: 'No se pudo agregar el contacto'\r\n        });\r\n      });\r\n    }\r\n  \r\n  }\r\n\r\n//Método que permite guardar los datos capturados en el modal de Modificación\r\n  actualizarContacto()\r\n  {\r\n    let {Id, Nombre, Celular, Sexo} = this.state.datosEditarContacto;\r\n    if (this.validarContacto(this.state.datosEditarContacto)) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.updateContactos({Id, Nombre, Celular, Sexo}).then(\r\n        ()=>{\r\n            //Se refresca el Table\r\n            this.refrescarContactos();\r\n            //Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\r\n            this.setState({\r\n              loading: false,\r\n              editarContactoModal: false, \r\n              datosEditarContacto: {\r\n              Id: '',\r\n              Nombre: '',\r\n              Celular: '',\r\n              Sexo: ''\r\n            }, \r\n            alert_message: '', \r\n            isNullNombre: '', \r\n            isNullCelular: '', \r\n            isNullSexo: ''});\r\n        },\r\n        (err) => err.response.json().then(()=>{\r\n          this.setState({\r\n            loading: false,\r\n            isError: 'true',\r\n            alert_message: 'No se pudo actualizar el contacto'\r\n          })\r\n          })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError: 'true',\r\n          alert_message: 'No se pudo actualizar el contacto'\r\n        });\r\n      });\r\n    }\r\n  }\r\n  \r\n//Método para eliminar un Contacto\r\n eliminarContacto(id){\r\n\r\n   confirmAlert({\r\n    customUI: ({ onClose }) => {\r\n      return (\r\n        <div className='custom-ui'>\r\n\r\n          <h1 className=\"glyphicon glyphicon-warning-sign\">\r\n            <FontAwesomeIcon className=\"mr-3\" icon=\"exclamation-triangle\" />\r\n            Esta seguro de eliminar el registro?</h1>\r\n          <div className=\"btn-toolbar row\" role=\"toolbar\">\r\n            <div className=\"col-sm-4\"></div>\r\n          <div className=\"btn-group col-sm-4\">\r\n              <Button color=\"secondary\" size=\"sm\" className=\"mr-3\" onClick={onClose}>\r\n                  <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n                  No\r\n               </Button>\r\n              <Button color=\"primary\" size=\"sm\" className=\"btn btn-default \"\r\n                    onClick={() => {\r\n                      this.props.deleteContactos(id).then(\r\n                        ()=>{\r\n                            //Se refresca el Table\r\n                            this.refrescarContactos();\r\n                            onClose();\r\n                        }, \r\n                        (error) => error.response.json().then(()=>\r\n                          {\r\n                            this.setState({\r\n                              isError:'true',\r\n                              alert_message: 'No se pudo eliminar el contacto'\r\n                            })\r\n                          }\r\n                        )\r\n                      ).catch(error=>{\r\n                        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n                        //  es superior al campo de la base de datos\r\n                        this.setState({\r\n                          isError:'true',\r\n                          alert_message: 'No se pudo eliminar el contacto'\r\n                        });\r\n                      });\r\n                    }}\r\n                >\r\n                  <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                   Si\r\n              </Button>\r\n              </div>\r\n                <div className=\"col-sm-4\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n }\r\n\r\n  //Nota: this.state mantiene el estado de las variables, es como un get pero para setear una  variables\r\n  // se debe ocupar\r\n  //Método para actualizar los datos\r\n  editarContacto (Id, Nombre, Celular, Sexo)\r\n  {\r\n    //Por default la variable editarContactoModal es false pero se niega este valor seteando a verdadero,\r\n    // y de esta manera se consigue visualizar el modal de mdificación y setearle los datos a los controles\r\n    this.validarContacto({Id, Nombre, Celular, Sexo});\r\n    this.setState({\r\n     datosEditarContacto: {Id, Nombre, Celular, Sexo}, editarContactoModal:! this.state.editarContactoModal\r\n   });\r\n  }\r\n  validacionControles()\r\n  {\r\n    if (((this.state.isNullNombre ==='true'||this.state.isNullCelular ==='true'||this.state.isNullSexo ==='true') && (this.state.alert_message!='')) ||(this.state.isError=== 'true'))\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  \r\n  render(){\r\n    const {loading} = this.state;\r\n    const {isErrorContactos} = this.state;\r\n    if(this.state.loggedIn==false)\r\n    {\r\n      return <Redirect  to=\"/\" />\r\n    }\r\n    //Se setea a la variable local contactosReg el objeto contactos que se lleno al ejecutarse el método\r\n    //componentWillMount en automatico y se retorna las filas del Table más una columna con los botones de\r\n    //Editar y eliminar\r\n    let contactosReg = this.props.contactos.map((contacto)=>{\r\n      return(\r\n        <tr key={contacto.Id}>\r\n          <td>{contacto.Id}</td>\r\n          <td>{contacto.Nombre}</td>\r\n          <td> {contacto.Celular}</td>\r\n          <td> {contacto.Sexo}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editarContacto.bind(this, contacto.Id, contacto.Nombre, contacto.Celular, contacto.Sexo)}>Editar</Button>\r\n            <Button color=\"danger\" size=\"sm\" onClick={this.eliminarContacto.bind(this,contacto.Id)}>Eliminar</Button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    // El botón Agregar cambia a true la variable nuevoContactoModal por medio del metodo toggleNuevoContactoModal\r\n\r\n    //Modal para modificar datos se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable nuevoContactoModal\r\n    //y se cierra cuando la misma variable cambia a false al presionarse los botones cerrar (x) y cancelar\r\n\r\n    //Modal para modificar datos  se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable editarContactoModal\r\n    //y se cierra cuando la misma variable cambia a false al presionarse los botones de cerrar (x) y cancelar\r\n\r\n    //ModalHeader: Encabezado del Modal\r\n    //ModalBody: Contenedor de controles\r\n    //ModalFooter:  Pie del Modal, se utiliza comunmente para añadir botones\r\n\r\n    //FormGroup: Agrupador de Controles\r\n    //Input propiedad value : se le puede ligar una propiedad de un objeto state, y con el método onChange asignarle\r\n    //al value lo que se captura.\r\n    // let {datosNuevoContacto} = this.state;,  se setea el estado y se almacena lo que se captura\r\n    // datosNuevoContacto.Nombre = e.target.value;, se setea lo que se captura en el input en la propiedad que se indica\r\n    // this.setState({datosNuevoContacto});, se confirma el seteo de la propiedad del objeto\r\n\r\n    //<tbody>{contactosReg}</tbody>, la variable local contactosReg proporciona los filas del Table\r\n  \r\n    return (\r\n      <div id=\"divContactos\">\r\n      \r\n      <div className=\"App container\">\r\n        <h2>Aplicación de Contactos</h2>\r\n        {isErrorContactos?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        <Button  className=\"my-3\" color=\"primary\" onClick={this.toggleNuevoContactoModal.bind(this)}>Agregar</Button>\r\n        \r\n        <Modal isOpen={this.state.nuevoContactoModal}  toggle={this.toggleNuevoContactoModal.bind(this)}>\r\n          <ModalHeader toggle={this.toggleNuevoContactoModal.bind(this)}>Agregar un Contacto</ModalHeader>\r\n          <ModalBody>\r\n           {this.validacionControles()?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        \r\n            <FormGroup>\r\n              <Label for=\"Nombre\">Nombre</Label>\r\n              <Input id=\"Nombre\" style={this.validacionInput(this.state.isNullNombre)} onChange={(e)=>{\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Nombre = e.target.value;\r\n                this.setState({datosNuevoContacto});\r\n\r\n                }} required=\"true\" maxlength=\"100\" onKeyUp onBlur={(e)=>{\r\n                  if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullNombre: 'true'});\r\n                  }else {\r\n                    this.setState({isNullNombre: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Celular\">Celular</Label>\r\n              <Input  id=\"Celular\" style={this.validacionInput(this.state.isNullCelular)} value={this.state.datosNuevoContacto.Celular} onChange={(e)=>{\r\n                var regex = /[^+\\d]/g;\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Celular = e.target.value.replace(regex,\"\");\r\n                this.setState({datosNuevoContacto});\r\n                }} required = \"true\"  onBlur={(e)=>{\r\n                  if (e.target.value == '')\r\n                    {\r\n                      this.setState({isNullCelular: 'true'});\r\n                    }else {\r\n                      this.setState({isNullCelular: 'false'});\r\n                    }\r\n                }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Sexo\">Sexo</Label>\r\n              <Input  id=\"Sexo\" style={this.validacionInput(this.state.isNullSexo)} value={this.state.datosNuevoContacto.Sexo} onChange={(e)=>{\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Sexo = e.target.value;\r\n                this.setState({datosNuevoContacto});\r\n                }} required=\"true\" maxlength=\"3\" minlength=\"3\" onBlur={(e)=>{\r\n                  if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullSexo: 'true'});\r\n                  }else {\r\n                    this.setState({isNullSexo: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n          </ModalBody>\r\n         <ModalFooter>\r\n           <Button color=\"primary\" onClick={this.agregarContacto.bind(this)}>\r\n            {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n             Guardar\r\n           </Button>\r\n           <Button color=\"secondary\" onClick={this.toggleNuevoContactoModal.bind(this)}>\r\n            <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n             Cancelar\r\n           </Button>\r\n         </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={this.state.editarContactoModal}  toggle={this.toggleEditarContactoModal.bind(this)}>\r\n         <ModalHeader toggle={this.toggleEditarContactoModal.bind(this)}>Editar un Contacto</ModalHeader>\r\n         <ModalBody>\r\n         {this.validacionControles()?<AlertaError mensaje={this.state.alert_message} />:null}\r\n          <FormGroup>\r\n            <Label for=\"Nombre\">Nombre</Label>\r\n            <Input  id=\"Nombre\" style={this.validacionInput(this.state.isNullNombre)} value={this.state.datosEditarContacto.Nombre} onChange={(e)=>{\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Nombre = e.target.value;\r\n              this.setState({datosEditarContacto});\r\n              }} required=\"true\" maxlength=\"100\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullNombre: 'true'});\r\n                }else {\r\n                  this.setState({isNullNombre: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Celular\">Celular</Label>\r\n            <Input  id=\"Celular\" style={this.validacionInput(this.state.isNullCelular)} value={this.state.datosEditarContacto.Celular} onChange={(e)=>{\r\n               var regex = /[^+\\d]/g;\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Celular = e.target.value.replace(regex,\"\");\r\n              this.setState({datosEditarContacto});\r\n              }} required=\"true\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullCelular: 'true'});\r\n                }else {\r\n                  this.setState({isNullCelular: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Sexo\">Sexo</Label>\r\n            <Input id=\"Sexo\" style={this.validacionInput(this.state.isNullSexo)}  value={this.state.datosEditarContacto.Sexo} onChange={(e)=>{\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Sexo = e.target.value;\r\n              this.setState({datosEditarContacto});\r\n              }} required=\"true\"  maxlength=\"3\" minlength=\"3\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullSexo: 'true'});\r\n                }else {\r\n                  this.setState({isNullSexo: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.actualizarContacto.bind(this)}>\r\n            {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n            Guardar\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={this.toggleEditarContactoModal.bind(this)}>\r\n            <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n            Cancelar\r\n          </Button>\r\n        </ModalFooter>\r\n       </Modal>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Nombre</th>\r\n              <th>Celular</th>\r\n              <th>Sexo</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contactosReg}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state)\r\n{\r\n  return {\r\n    contactos: state.contactos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchContactos, saveContactos, updateContactos, deleteContactos})(Contactos);\r\n"]},"metadata":{},"sourceType":"module"}