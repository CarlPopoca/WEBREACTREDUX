{"version":3,"sources":["componentes/AlertaError.js","actions/actionsIniciarSesion.js","componentes/seguridad/IniciarSesion.js","componentes/seguridad/CerrarSesion.js","actions/actionsUsuarios.js","componentes/seguridad/RegistrarUsuario.js","actions/actionsContactos.js","componentes/Contactos.js","componentes/NavMenu.js","componentes/Home.js","App.js","serviceWorker.js","rootReducer.js","reducers/contactos.js","reducers/usuarios.js","index.js","logo.svg"],"names":["AlertaError","props","class","role","this","mensaje","Component","LOGIN_USUARIOS","handleResponse","response","ok","json","error","Error","statusText","iniciarSesion","data","dispatch","fetch","method","body","JSON","stringify","headers","then","type","login","IniciarSesion","loggedIn","localStorage","getItem","state","loading","alert_message","datosUsuario","Email","Password","RemenberMe","isNullEmail","isNullPassword","setState","length","validacionControles","setItem","err","isError","catch","e","to","id","className","validacionBoton","icon","target","value","placeholder","name","onChange","required","maxlength","minlength","onBlur","htmlFor","onClick","submitForm","bind","spin","connect","usuarios","CerrarSesion","Salir","axios","post","removeItem","ADD_USUARIOS","RegistrarUsuario","ConfirmPassword","isNullComfirmPassword","saveUsuarios","addUsuarios","SET_CONTACTOS","ADD_CONTACTOS","UPDATE_CONTACTOS","DELETE_CONTACTOS","handleResponseNoJson","Contactos","isErrorContactos","isNullNombre","isNullCelular","isNullSexo","datosNuevoContacto","Nombre","Celular","Sexo","datosEditarContacto","Id","nuevoContactoModal","editarContactoModal","refrescarContactos","fetchContactos","results","nextProps","borderColor","contacto","nombre","celular","sexo","alert","valAlert","valContacto","validarContacto","saveContactos","contactos","updateContactos","confirmAlert","customUI","onClose","Button","color","size","deleteContactos","contactosReg","map","key","editarContacto","eliminarContacto","toggleNuevoContactoModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","style","validacionInput","onKeyUp","replace","ModalFooter","agregarContacto","toggleEditarContactoModal","actualizarContacto","Table","delContactos","NavMenu","changeNavItem","location","pathname","currentRoute","letLogout","NavItem","letLogin","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","pills","withRouter","Home","App","isLoading","library","add","fab","faCheckSquare","faCoffee","faTrashAlt","faExclamationTriangle","faTimes","faCheck","faUserCircle","faKey","faSignInAlt","faDatabase","faSyncAlt","src","logo","alt","exact","path","component","Boolean","window","hostname","match","combineReducers","action","item","filter","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d757baba.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nexport default class AlertaError extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n  render()\r\n  {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        {this.props.mensaje}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","export const LOGIN_USUARIOS = 'LOGIN_USUARIOS';\r\n\r\nexport function loginUsuario(login){\r\n    return {\r\n        type: LOGIN_USUARIOS,\r\n        login\r\n    }\r\n}\r\n\r\nfunction handleResponse(response){\r\n  \r\n    if (response.ok){\r\n        //Cuando la respuesta es satisfactoría\r\n        return response.json();\r\n    }else{\r\n        //Cuando ocurre un error\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport function iniciarSesion(data){\r\n    return dispatch =>{\r\n        return fetch('https://localhost:44328/api/Usuarios/Ingresar', {\r\n            method: 'post',\r\n            body: JSON.stringify(data),\r\n            headers:{\r\n                \"content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(\r\n            loginUsuario(data)\r\n        ));\r\n    }\r\n}\r\n","import React, {Component, Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport AlertaError from '../AlertaError';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {iniciarSesion} from '../../actions/actionsIniciarSesion';\r\nimport {connect} from 'react-redux';\r\n\r\nclass IniciarSesion extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      loading: false,\r\n      alert_message:'',\r\n      datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        RemenberMe: false\r\n      },\r\n      loggedIn,\r\n      isNullEmail: '',\r\n      isNullPassword: ''\r\n    }\r\n  }\r\n  validacionControles() {\r\n    if (this.state.datosUsuario.Email=='' && this.state.datosUsuario.Password=='')\r\n    {\r\n      this.setState({\r\n        alert_message: 'Introduzca el usuario y el password',\r\n        isNullEmail: 'true',\r\n        isNullPassword: 'true'\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.datosUsuario.Password.length < 10)\r\n    {\r\n      this.setState({\r\n        alert_message: 'El password debe tener diez caracteres',\r\n        isNullPassword: 'true',\r\n      });\r\n       return false;\r\n    }\r\n    return  true;\r\n  }\r\n\r\n  submitForm()\r\n  {\r\n    let valControles = this.validacionControles();\r\n    if (valControles){\r\n      this.setState({\r\n        loading:true\r\n      });\r\n      this.props.iniciarSesion(this.state.datosUsuario).then(\r\n        (response)=>{\r\n          //Se genera el token\r\n          localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\");\r\n            //Se setea que ingreso\r\n            this.setState({\r\n              loading:false,\r\n              loggedIn: true,\r\n              alert_message: '',\r\n              datosUsuario: {\r\n                Email: '',\r\n                Password: '',\r\n                RemenberMe: false\r\n                  }\r\n            });\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            loading: false,\r\n            isError: 'true',\r\n            alert_message: 'El usuario no puede iniciar sesión'\r\n          })\r\n        })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError: 'true',\r\n          alert_message: 'El usuario no puede iniciar sesión'\r\n        });\r\n      });\r\n    }\r\n}\r\n\r\nvalidacionBoton(e){\r\n  if (e == 'true'){\r\n    return 'red-icon'\r\n  }\r\n  if (e == 'false'){\r\n    return 'green-icon'\r\n  }\r\n  return '';\r\n}\r\n\r\n  render(){\r\n    const {loading} = this.state;\r\n    if (this.state.loggedIn===true){\r\n      //Otra forma de hacer redirect\r\n      // this.props.history.push(\"/\")\r\n      return <Redirect  to=\"/\" />\r\n      //  window.location.href='/';\r\n    }\r\n    return (\r\n\r\n      <div id=\"cover-caption\">\r\n      \r\n          {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n          <div id=\"container\" className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-sm-6 offset-sm-4 text-center\">\r\n                    <h1 className=\"col-sm-7 display-5  my-4\">Iniciar sesión</h1>\r\n                    <div className=\"info-form col-sm-7\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                  <div className=\"input-group-text bg-white\">\r\n                                    <i className= {this.validacionBoton(this.state.isNullEmail)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"user-circle\" /></i>\r\n                                  </div>\r\n                                </div>\r\n                                <input type=\"email\" className=\"form-control\" type= \"text\" placeholder=\"Usuario\" name=\"Email\" value={this.state.datosUsuario.Email} onChange={(e)=>{\r\n                                    let {datosUsuario} = this.state;\r\n                                    datosUsuario.Email = e.target.value;\r\n                                    this.setState({datosUsuario});\r\n                                  }} required=\"true\" onBlur={(e)=>{\r\n                                    if (e.target.value == '')\r\n                                      {\r\n                                        this.setState({isNullEmail: 'true'});\r\n                                      }else {\r\n                                        this.setState({isNullEmail: 'false', alert_message: ''});\r\n                                      }\r\n                                    }}/>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input  className=\"form-control\" type= \"password\" placeholder=\"Password\" name=\"Password\" value={this.state.datosUsuario.Password} onChange={(e)=>{\r\n                                    let {datosUsuario} = this.state;\r\n                                    datosUsuario.Password = e.target.value;\r\n                                    this.setState({datosUsuario});\r\n                                  }}  required=\"true\" maxlength=\"10\" minlength=\"10\" onBlur={(e)=>{\r\n                                    if (e.target.value == '')\r\n                                      {\r\n                                        this.setState({isNullPassword: 'true'});\r\n                                      }else {\r\n                                        this.setState({isNullPassword: 'false', alert_message: ''});\r\n                                      }\r\n                                    }}/>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                              <div className=\"form-check\">\r\n                                <input type=\"checkbox\" name=\"RemenberMe\"\r\n                                   className=\"form-check-input\" value={this.state.datosUsuario.RemenberMe} onChange={(e)=>{\r\n                                       let {datosUsuario} = this.state;\r\n                                       datosUsuario.RemenberMe = e.target.value;\r\n                                       this.setState({datosUsuario});\r\n                                   }}/>\r\n                                   <label htmlFor=\"RemenberMe\" className=\"form-check-label\">Recordar sesión</label>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                         <div className=\"form-group\">\r\n                             <button className=\"btn btn-success\" onClick={this.submitForm.bind(this)}>\r\n                             {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"sign-in-alt\" />}\r\n                               Ingresar</button>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\nfunction mapStateToProps (state)\r\n{\r\n  return {\r\n    usuarios: state.login\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {iniciarSesion})(IniciarSesion);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AlertaError from '../../componentes/AlertaError';\r\n\r\nclass CerrarSesion extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      alert_message:'',\r\n      loggedIn\r\n    }\r\n    this.Salir();\r\n  }\r\n  Salir()\r\n  {\r\n    axios.post('https://localhost:44328/api/Usuarios/CerrarSesion').then((response)=>{\r\n          localStorage.removeItem(\"token\");\r\n          this.setState({\r\n            loggedIn: false\r\n          });\r\n      }).catch(error=>{\r\n\r\n          this.setState({\r\n            alert_message: 'Hubo un error al cerrar la sesión'\r\n          });\r\n        });\r\n }\r\n  render(){\r\n      // this.props.history.push(\"/\")\r\n      if (!this.state.loggedIn)\r\n      return <Redirect  to=\"/\" />\r\n      //  window.location.href='/';\r\n      return (\r\n        <div id=\"cover-caption\">\r\n          <hr/>\r\n            {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default CerrarSesion;\r\n","export const ADD_USUARIOS = 'ADD_USUARIOS';\r\n\r\n\r\nexport function addUsuarios(usuarios){\r\n    return {\r\n        type: ADD_USUARIOS,\r\n        usuarios\r\n    }\r\n}\r\n\r\nfunction handleResponse(response){\r\n  \r\n    if (response.ok){\r\n        //Cuando la respuesta es satisfactoría\r\n        return response.json();\r\n    }else{\r\n        //Cuando ocurre un error\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport function saveUsuarios(data){\r\n    return dispatch =>{\r\n        return fetch('https://localhost:44328/api/Usuarios/Registrar', {\r\n            method: 'post',\r\n            body: JSON.stringify(data),\r\n            headers:{\r\n                \"content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(\r\n            addUsuarios(data)\r\n        ));\r\n    }\r\n}","import React, {Component, Fragment} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport AlertaError from '../../componentes/AlertaError';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {saveUsuarios, iniciarSesionUsuario} from '../../actions/actionsUsuarios';\r\nimport {iniciarSesion} from '../../actions/actionsIniciarSesion';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RegistrarUsuario extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      loading: false,\r\n      alert_message:'',\r\n      datosUsuario: {\r\n        Email: '',\r\n        Password: '',\r\n        ConfirmPassword: ''\r\n      },\r\n      loggedIn,\r\n      isNullEmail: '',\r\n      isNullPassword: '',\r\n      isNullComfirmPassword: ''\r\n    }\r\n  }\r\n  iniciarSesion()\r\n  {\r\n      this.props.iniciarSesion(this.state.datosUsuario).then(\r\n        (response)=>{\r\n          //Se genera el token\r\n          localStorage.setItem(\"token\", \"jasdajalkcecklwcljekwej\");\r\n            //Se setea que ingreso\r\n            this.setState({\r\n              loggedIn: true,\r\n              alert_message: '',\r\n              datosUsuario: {\r\n                Email: '',\r\n                Password: '',\r\n                ConfirmPassword: ''\r\n                  }\r\n                });\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            isError:'true',\r\n            alert_message: 'El usuario no pudo iniciar sesión'\r\n          })\r\n        })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          isError:'true',\r\n          alert_message: 'El usuario no pudo iniciar sesión'\r\n        });\r\n      });\r\n  }\r\n\r\n   validacionControles() {\r\n\r\n     if (this.state.datosUsuario.Email=='' && this.state.datosUsuario.Password=='' && this.state.datosUsuario.ConfirmPassword=='')\r\n     {\r\n       this.setState({\r\n         alert_message: 'Introduzca los datos que se le solicitan',\r\n         isNullEmail: 'true',\r\n         isNullPassword: 'true',\r\n         isNullComfirmPassword: 'true'\r\n       });\r\n       return false;\r\n     }\r\n\r\n     if (this.state.datosUsuario.Password.length < 10)\r\n     {\r\n       this.setState({\r\n         alert_message: 'El password debe tener diez caracteres',\r\n         isNullPassword: 'true',\r\n       });\r\n        return false;\r\n     }\r\n    if (this.state.datosUsuario.ConfirmPassword.length < 10)\r\n    {\r\n      this.setState({\r\n        alert_message: 'La confirmación del password debe tener diez caracteres',\r\n        isNullComfirmPassword: 'true',\r\n      });\r\n       return false;\r\n    }\r\n    if (this.state.datosUsuario.Password != this.state.datosUsuario.ConfirmPassword)\r\n    {\r\n      this.setState({\r\n        alert_message: 'El password y la confirmación del password deben ser indenticos',\r\n        isNullPassword: 'true',\r\n        isNullComfirmPassword: 'true'\r\n      });\r\n      return false;\r\n    }\r\n     return true;\r\n  }\r\n\r\n  submitForm()\r\n  {\r\n    let valControles = this.validacionControles();\r\n    if (valControles){\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.saveUsuarios(this.state.datosUsuario).then(\r\n        (response)=>{\r\n          this.iniciarSesion();\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            loading: false,\r\n            isError: 'true',\r\n            alert_message: 'No se pudo agregar el usuario'\r\n          })\r\n        }\r\n        )\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError:'true',\r\n          alert_message: 'No se pudo agregar el usuario'\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\nvalidacionBoton(e){\r\n  if (e == 'true'){\r\n    return 'red-icon'\r\n  }\r\n  if (e == 'false'){\r\n    return 'green-icon'\r\n  }\r\n  return '';\r\n}\r\n\r\nrender(){\r\n  const {loading} = this.state;\r\n  if (this.state.loggedIn===true){\r\n    //Otra forma de hacer redirect\r\n    // this.props.history.push(\"/\")\r\n    return <Redirect  to=\"/\" />\r\n  }\r\n  return (\r\n\r\n    <div id=\"cover-caption\">\r\n\r\n        {this.state.alert_message!=\"\"?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        <div id=\"container\" className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-4 text-center\">\r\n                    <h1 className=\"col-sm-7 display-5  my-4\">Registrar</h1>\r\n                    <div className=\"info-form col-sm-7\">\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text bg-white\">\r\n                                  <i className= {this.validacionBoton(this.state.isNullEmail)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"user-circle\" /></i>\r\n                                </div>\r\n                              </div>\r\n                              <input type=\"email\" className=\"form-control\" type= \"text\" placeholder=\"Usuario\" name=\"nombreUsuario\" value={this.state.datosUsuario.Email} onChange={(e)=>{\r\n                                let {datosUsuario} = this.state;\r\n                                datosUsuario.Email = e.target.value;\r\n                                this.setState({datosUsuario});\r\n                              }} required=\"true\"\r\n                              onBlur={(e)=>{\r\n                                if (e.target.value == '')\r\n                                  {\r\n                                    this.setState({isNullEmail: 'true'});\r\n                                  }else {\r\n                                    this.setState({isNullEmail: 'false', alert_message: ''});\r\n                                  }\r\n                                }} />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input className=\"form-control\" type= \"password\" placeholder=\"Password\" name=\"password\" value={this.state.datosUsuario.Password} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.Password = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullPassword: 'true'});\r\n                                    }else {\r\n                                      this.setState({isNullPassword: 'false', alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <div className=\"input-group\">\r\n                               <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-white\">\r\n                                   <i className= {this.validacionBoton(this.state.isNullComfirmPassword)}>  <FontAwesomeIcon className=\"mr-1\" icon=\"key\" /></i>\r\n                                 </div>\r\n                               </div>\r\n                                <input className=\"form-control\" type= \"password\" placeholder=\"Confirmar password\" name=\"confirmarPassword\" value={this.state.datosUsuario.ConfirmPassword} onChange={(e)=>{\r\n                                  let {datosUsuario} = this.state;\r\n                                  datosUsuario.ConfirmPassword = e.target.value;\r\n                                  this.setState({datosUsuario});\r\n                                }}  required=\"true\" maxlength=\"10\" minlength=\"10\"\r\n                                onBlur={(e)=>{\r\n                                  if (e.target.value == '')\r\n                                    {\r\n                                      this.setState({isNullComfirmPassword: 'true'});\r\n                                    }else {\r\n                                      this.setState({isNullComfirmPassword: 'false', alert_message: ''});\r\n                                    }\r\n                                  }}/>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <button className=\"btn btn-success\" onClick={this.submitForm.bind(this)}>\r\n                                {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n                                Guardar\r\n                              </button>\r\n                            </div>\r\n                      </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\nfunction mapStateToProps (state)\r\n{\r\n  return {\r\n    usuarios: state.usuarios,\r\n    login: state.login\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {saveUsuarios, iniciarSesion})(RegistrarUsuario);\r\n","\r\nexport const SET_CONTACTOS = 'SET_CONTACTOS';\r\nexport const ADD_CONTACTOS = 'ADD_CONTACTOS';\r\nexport const UPDATE_CONTACTOS = 'UPDATE_CONTACTOS';\r\nexport const DELETE_CONTACTOS = 'DELETE_CONTACTOS';\r\n\r\nexport function setContactos(contactos){\r\n\r\n    return {\r\n        type: SET_CONTACTOS,\r\n        contactos\r\n    }\r\n}\r\n\r\nexport function addContactos(contactos){\r\n    return {\r\n        type: ADD_CONTACTOS,\r\n        contactos\r\n    }\r\n\r\n}\r\n\r\nexport function updContactos(contactos){\r\n    return {\r\n        type: UPDATE_CONTACTOS,\r\n        contactos\r\n    }\r\n}\r\n\r\nexport function delContactos(Id){\r\n    return {\r\n        type: DELETE_CONTACTOS,\r\n        Id\r\n    }\r\n}\r\nfunction handleResponse(response){\r\n    if (response.ok){\r\n        //Cuando la respuesta es satisfactoría\r\n        return response.json();\r\n    }else{\r\n        //Cuando ocurre un error\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n}\r\nfunction handleResponseNoJson(response){\r\n  \r\n    if (response.ok){\r\n        //Cuando la respuesta es satisfactoría\r\n        return response\r\n    }else{\r\n        //Cuando ocurre un error\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n    }\r\n}\r\nexport function fetchContactos()\r\n{\r\n    return dispatch =>{\r\n       return fetch('https://localhost:44386/api/Contactos', {\r\n            method: 'get',\r\n            headers:{\r\n                \"content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(\r\n            setContactos(data)\r\n        ));\r\n    }  \r\n}\r\nexport function saveContactos(data){\r\n    return dispatch =>{\r\n        return fetch('https://localhost:44386/api/Contactos', {\r\n            method: 'post',\r\n            body: JSON.stringify(data),\r\n            headers:{\r\n                \"content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(\r\n            addContactos(data)\r\n        ));\r\n    }\r\n}\r\nexport function updateContactos(data){\r\n\r\n    return dispatch =>{\r\n        return fetch(`https://localhost:44386/api/Contactos/${data.Id}`, {\r\n            method: 'put',\r\n            body: JSON.stringify(data),\r\n            headers:{\r\n                \"content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(handleResponseNoJson)\r\n        .then(data => dispatch(\r\n            updContactos(data)\r\n        ));\r\n    }\r\n}\r\n\r\nexport function deleteContactos(Id){\r\n    return dispatch =>{\r\n        return fetch(`https://localhost:44386/api/Contactos/${Id}`, {\r\n            method: 'delete',\r\n            headers:{\r\n                \"content-Type\":\"application/json\"\r\n            }\r\n        })\r\n        .then(handleResponse)\r\n        .then(data => dispatch(\r\n            delContactos(Id)\r\n        ));\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Label, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button} from 'reactstrap';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {connect} from 'react-redux';\r\nimport ContactosList from './ContactosList';\r\nimport {fetchContactos, saveContactos, updateContactos, deleteContactos} from '../actions/actionsContactos';\r\nimport AlertaError from './AlertaError';\r\n/*import Navegacion from './Navegacion';*/\r\n//Una Clase que extiende del component de React se comvierte en una etiqueta html\r\nclass Contactos extends Component  {\r\n\r\n  componentDidMount()\r\n  {\r\n    this.refrescarContactos();\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n      loggedIn = false;\r\n    }\r\n    this.state = {\r\n      isErrorContactos:false,\r\n      loading: false,\r\n      isError:'',\r\n      isNullNombre: '',\r\n      isNullCelular: '',\r\n      isNullSexo: '',\r\n      alert_message:'',\r\n      datosNuevoContacto: {\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      },\r\n      datosEditarContacto: {\r\n        Id: '',\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      },\r\n      nuevoContactoModal: false,\r\n      editarContactoModal: false,\r\n      loggedIn\r\n    }\r\n  }\r\n  //Se declara en el objeto state las variables que mantendran el valor\r\n  //Contactos - Los datos que llenaran el Table\r\n  //datosNuevoContacto - Los datos para la Alta\r\n  //datosEditarContacto - Los datos para la modificación\r\n  //nuevoContactoModal - Para la visualización y cierre de la ventana modal de Alta\r\n //editarContactoModal - Para la visualización  y cierre de la ventana modal de modificación\r\n\r\n //Método que refrescara el Table\r\n  refrescarContactos(){\r\n    this.props.fetchContactos().then(\r\n      (results) => {\r\n        this.setState({\r\n          isErrorContactos: false,\r\n          alert_message: ''\r\n        });\r\n      }\r\n    ).catch(error=>{\r\n      this.setState({\r\n        isErrorContactos: true,\r\n        alert_message: 'Error al obtener los contactos'\r\n      });\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n     //entra cada vez que se ejecuta un evento transaccional\r\n  }\r\n//Método que niega el valor de la variable nuevoContactoModal inicializada en false, esto\r\n//permite mostrar el Modal para la Alta y inicializa los datos del objeto datosNuevoContacto, y\r\n//Se regresa el valor de la variable nuevoContactoModal a false cuando se pulsa el botón de cerrar y\r\n//cuando se pulsa el botón de cancelar\r\n  toggleNuevoContactoModal() {\r\n    this.setState({\r\n      isErrorContactos: false,\r\n      isError:'',\r\n      isNullNombre:'',\r\n      isNullCelular:'',\r\n      isNullSexo:'',\r\n      alert_message:'',\r\n      nuevoContactoModal: !this.state.nuevoContactoModal,\r\n      datosNuevoContacto: {\r\n        Nombre: '',\r\n        Celular: '',\r\n        Sexo: ''\r\n      }\r\n    });\r\n  }\r\n  //Método que niega el valor de la variable editarContactoModal inicializada en false, esto\r\n  //permite mostrar el Modal para la Modificación y\r\n  //se regresa el valor de la variable editarContactoModal a false cuando se pulsa el botón de cerrar y\r\n  //cuando se pulsa el botón de cancelar\r\n  toggleEditarContactoModal() {\r\n    //Este metodo se dispara cuando se cierra la ventana modal de editar, y cuando se pulsa el botón de Cancelar\r\n    // convierte el valor de la variable editarContactoModal a false\r\n  this.setState({\r\n    editarContactoModal: !this.state.editarContactoModal\r\n  });\r\n}\r\nvalidacionInput(e){\r\n  if (e === 'true'){\r\n    return {borderColor: '#dc3545'}\r\n  }\r\n  if (e === 'false'){\r\n    return  {borderColor: '#28a745'}\r\n  }\r\n  return  {borderColor: 'none'};\r\n}\r\n\r\nvalidarContacto(contacto) {\r\n  var nombre='false', celular='false', sexo='false', alert='', valAlert=false, valContacto= true;\r\n  if (contacto.Nombre ==='')\r\n  {\r\n    nombre ='true';\r\n    valAlert=true;\r\n  }\r\n  if (contacto.Celular ==='')\r\n  {\r\n    celular = 'true';\r\n    valAlert=true;\r\n  }\r\n  if (contacto.Sexo ==='')\r\n  {\r\n    sexo = 'true';\r\n    valAlert=true;\r\n  }\r\n  if (valAlert) {\r\n    alert = 'Introduzca la información que se le solicita'\r\n    valContacto = false;\r\n  }\r\n  this.setState({\r\n    isError:'',\r\n    isNullNombre: nombre,\r\n    isNullCelular: celular,\r\n    isNullSexo: sexo,\r\n    alert_message: alert\r\n  });\r\n  return valContacto;\r\n}\r\n\r\n\r\n//Método que permite guardar los datos capturados en el modal de Alta\r\n  agregarContacto (){\r\n    let {Nombre, Celular, Sexo} = this.state.datosNuevoContacto;\r\n    if (this.validarContacto(this.state.datosNuevoContacto)) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.saveContactos({Nombre, Celular, Sexo}).then(\r\n        (response)=>{\r\n          //Se setea la variable de state contactos, los simbolo {} permiten usarla para setearla por medio de let\r\n          //this.state contiene los contactos que se renderizaron en el Table\r\n            let {contactos} = this.state;\r\n            //Se agrega al final el contacto que devolvio el metodo post de la api contactos\r\n            //contactos.push(response.data);\r\n            //Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\r\n            this.setState({\r\n              loading: false,\r\n              contactos, \r\n              nuevoContactoModal:false, \r\n              datosNuevoContacto: {\r\n              Nombre: '',\r\n              Celular: '',\r\n              Sexo: ''\r\n            }, \r\n            alert_message: '',\r\n            isNullNombre: '', \r\n            isNullCelular:'', \r\n            isNullSexo: ''});\r\n        }, \r\n        (err) => err.response.json().then(()=>{\r\n          //Entra cuando los errores son superficiales, por ejemplo cuando los datos que se capturan no \r\n          //coinciden con el tipo de dato \r\n          this.setState({\r\n            loading: false,\r\n            isError: 'true',\r\n            alert_message: 'No se pudo agregar el contacto'\r\n          })\r\n        })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError: 'true',\r\n          alert_message: 'No se pudo agregar el contacto'\r\n        });\r\n      });\r\n    }\r\n  \r\n  }\r\n\r\n//Método que permite guardar los datos capturados en el modal de Modificación\r\n  actualizarContacto()\r\n  {\r\n    let {Id, Nombre, Celular, Sexo} = this.state.datosEditarContacto;\r\n    if (this.validarContacto(this.state.datosEditarContacto)) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.updateContactos({Id, Nombre, Celular, Sexo}).then(\r\n        ()=>{\r\n            //Se refresca el Table\r\n            this.refrescarContactos();\r\n            //Inicializa el estado de las variables nuevoContactoModal y el objeto datosNuevoContacto\r\n            this.setState({\r\n              loading: false,\r\n              editarContactoModal: false, \r\n              datosEditarContacto: {\r\n              Id: '',\r\n              Nombre: '',\r\n              Celular: '',\r\n              Sexo: ''\r\n            }, \r\n            alert_message: '', \r\n            isNullNombre: '', \r\n            isNullCelular: '', \r\n            isNullSexo: ''});\r\n        },\r\n        (err) => err.response.json().then(()=>{\r\n          this.setState({\r\n            loading: false,\r\n            isError: 'true',\r\n            alert_message: 'No se pudo actualizar el contacto'\r\n          })\r\n          })\r\n      ).catch(error=>{\r\n        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n        //  es superior al campo de la base de datos\r\n        this.setState({\r\n          loading: false,\r\n          isError: 'true',\r\n          alert_message: 'No se pudo actualizar el contacto'\r\n        });\r\n      });\r\n    }\r\n  }\r\n  \r\n//Método para eliminar un Contacto\r\n eliminarContacto(id){\r\n\r\n   confirmAlert({\r\n    customUI: ({ onClose }) => {\r\n      return (\r\n        <div className='custom-ui'>\r\n\r\n          <h1 className=\"glyphicon glyphicon-warning-sign\">\r\n            <FontAwesomeIcon className=\"mr-3\" icon=\"exclamation-triangle\" />\r\n            Esta seguro de eliminar el registro?</h1>\r\n          <div className=\"btn-toolbar row\" role=\"toolbar\">\r\n            <div className=\"col-sm-4\"></div>\r\n          <div className=\"btn-group col-sm-4\">\r\n              <Button color=\"secondary\" size=\"sm\" className=\"mr-3\" onClick={onClose}>\r\n                  <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n                  No\r\n               </Button>\r\n              <Button color=\"primary\" size=\"sm\" className=\"btn btn-default \"\r\n                    onClick={() => {\r\n                      this.props.deleteContactos(id).then(\r\n                        ()=>{\r\n                            //Se refresca el Table\r\n                            this.refrescarContactos();\r\n                            onClose();\r\n                        }, \r\n                        (error) => error.response.json().then(()=>\r\n                          {\r\n                            this.setState({\r\n                              isError:'true',\r\n                              alert_message: 'No se pudo eliminar el contacto'\r\n                            })\r\n                          }\r\n                        )\r\n                      ).catch(error=>{\r\n                        //entra cuando los errores se propagan desde la base de datos, por ejemplo cuando la logitud de un \r\n                        //  es superior al campo de la base de datos\r\n                        this.setState({\r\n                          isError:'true',\r\n                          alert_message: 'No se pudo eliminar el contacto'\r\n                        });\r\n                      });\r\n                    }}\r\n                >\r\n                  <FontAwesomeIcon className=\"mr-2\" icon=\"check\" />\r\n                   Si\r\n              </Button>\r\n              </div>\r\n                <div className=\"col-sm-4\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n }\r\n\r\n  //Nota: this.state mantiene el estado de las variables, es como un get pero para setear una  variables\r\n  // se debe ocupar\r\n  //Método para actualizar los datos\r\n  editarContacto (Id, Nombre, Celular, Sexo)\r\n  {\r\n    //Por default la variable editarContactoModal es false pero se niega este valor seteando a verdadero,\r\n    // y de esta manera se consigue visualizar el modal de mdificación y setearle los datos a los controles\r\n    this.validarContacto({Id, Nombre, Celular, Sexo});\r\n    this.setState({\r\n     datosEditarContacto: {Id, Nombre, Celular, Sexo}, editarContactoModal:! this.state.editarContactoModal\r\n   });\r\n  }\r\n  validacionControles()\r\n  {\r\n    if (((this.state.isNullNombre ==='true'||this.state.isNullCelular ==='true'||this.state.isNullSexo ==='true') && (this.state.alert_message!='')) ||(this.state.isError=== 'true'))\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  \r\n  render(){\r\n    const {loading} = this.state;\r\n    const {isErrorContactos} = this.state;\r\n    if(this.state.loggedIn==false)\r\n    {\r\n      return <Redirect  to=\"/\" />\r\n    }\r\n    //Se setea a la variable local contactosReg el objeto contactos que se lleno al ejecutarse el método\r\n    //componentWillMount en automatico y se retorna las filas del Table más una columna con los botones de\r\n    //Editar y eliminar\r\n    let contactosReg = this.props.contactos.map((contacto)=>{\r\n      return(\r\n        <tr key={contacto.Id}>\r\n          <td>{contacto.Id}</td>\r\n          <td>{contacto.Nombre}</td>\r\n          <td> {contacto.Celular}</td>\r\n          <td> {contacto.Sexo}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editarContacto.bind(this, contacto.Id, contacto.Nombre, contacto.Celular, contacto.Sexo)}>Editar</Button>\r\n            <Button color=\"danger\" size=\"sm\" onClick={this.eliminarContacto.bind(this,contacto.Id)}>Eliminar</Button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    // El botón Agregar cambia a true la variable nuevoContactoModal por medio del metodo toggleNuevoContactoModal\r\n\r\n    //Modal para modificar datos se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable nuevoContactoModal\r\n    //y se cierra cuando la misma variable cambia a false al presionarse los botones cerrar (x) y cancelar\r\n\r\n    //Modal para modificar datos  se abre en automatico cuando su atributo isOpen cambia a verdadero por medio de la variable editarContactoModal\r\n    //y se cierra cuando la misma variable cambia a false al presionarse los botones de cerrar (x) y cancelar\r\n\r\n    //ModalHeader: Encabezado del Modal\r\n    //ModalBody: Contenedor de controles\r\n    //ModalFooter:  Pie del Modal, se utiliza comunmente para añadir botones\r\n\r\n    //FormGroup: Agrupador de Controles\r\n    //Input propiedad value : se le puede ligar una propiedad de un objeto state, y con el método onChange asignarle\r\n    //al value lo que se captura.\r\n    // let {datosNuevoContacto} = this.state;,  se setea el estado y se almacena lo que se captura\r\n    // datosNuevoContacto.Nombre = e.target.value;, se setea lo que se captura en el input en la propiedad que se indica\r\n    // this.setState({datosNuevoContacto});, se confirma el seteo de la propiedad del objeto\r\n\r\n    //<tbody>{contactosReg}</tbody>, la variable local contactosReg proporciona los filas del Table\r\n  \r\n    return (\r\n      <div id=\"divContactos\">\r\n      \r\n      <div className=\"App container\">\r\n        <h2>Aplicación de Contactos</h2>\r\n        {isErrorContactos?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        <Button  className=\"my-3\" color=\"primary\" onClick={this.toggleNuevoContactoModal.bind(this)}>Agregar</Button>\r\n        \r\n        <Modal isOpen={this.state.nuevoContactoModal}  toggle={this.toggleNuevoContactoModal.bind(this)}>\r\n          <ModalHeader toggle={this.toggleNuevoContactoModal.bind(this)}>Agregar un Contacto</ModalHeader>\r\n          <ModalBody>\r\n           {this.validacionControles()?<AlertaError mensaje={this.state.alert_message} />:null}\r\n        \r\n            <FormGroup>\r\n              <Label for=\"Nombre\">Nombre</Label>\r\n              <Input id=\"Nombre\" style={this.validacionInput(this.state.isNullNombre)} onChange={(e)=>{\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Nombre = e.target.value;\r\n                this.setState({datosNuevoContacto});\r\n\r\n                }} required=\"true\" maxlength=\"100\" onKeyUp onBlur={(e)=>{\r\n                  if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullNombre: 'true'});\r\n                  }else {\r\n                    this.setState({isNullNombre: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Celular\">Celular</Label>\r\n              <Input  id=\"Celular\" style={this.validacionInput(this.state.isNullCelular)} value={this.state.datosNuevoContacto.Celular} onChange={(e)=>{\r\n                var regex = /[^+\\d]/g;\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Celular = e.target.value.replace(regex,\"\");\r\n                this.setState({datosNuevoContacto});\r\n                }} required = \"true\"  onBlur={(e)=>{\r\n                  if (e.target.value == '')\r\n                    {\r\n                      this.setState({isNullCelular: 'true'});\r\n                    }else {\r\n                      this.setState({isNullCelular: 'false'});\r\n                    }\r\n                }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"Sexo\">Sexo</Label>\r\n              <Input  id=\"Sexo\" style={this.validacionInput(this.state.isNullSexo)} value={this.state.datosNuevoContacto.Sexo} onChange={(e)=>{\r\n                let {datosNuevoContacto} = this.state;\r\n                datosNuevoContacto.Sexo = e.target.value;\r\n                this.setState({datosNuevoContacto});\r\n                }} required=\"true\" maxlength=\"3\" minlength=\"3\" onBlur={(e)=>{\r\n                  if (e.target.value == '')\r\n                  {\r\n                    this.setState({isNullSexo: 'true'});\r\n                  }else {\r\n                    this.setState({isNullSexo: 'false'});\r\n                  }\r\n                }}/>\r\n            </FormGroup>\r\n          </ModalBody>\r\n         <ModalFooter>\r\n           <Button color=\"primary\" onClick={this.agregarContacto.bind(this)}>\r\n            {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n             Guardar\r\n           </Button>\r\n           <Button color=\"secondary\" onClick={this.toggleNuevoContactoModal.bind(this)}>\r\n            <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n             Cancelar\r\n           </Button>\r\n         </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={this.state.editarContactoModal}  toggle={this.toggleEditarContactoModal.bind(this)}>\r\n         <ModalHeader toggle={this.toggleEditarContactoModal.bind(this)}>Editar un Contacto</ModalHeader>\r\n         <ModalBody>\r\n         {this.validacionControles()?<AlertaError mensaje={this.state.alert_message} />:null}\r\n          <FormGroup>\r\n            <Label for=\"Nombre\">Nombre</Label>\r\n            <Input  id=\"Nombre\" style={this.validacionInput(this.state.isNullNombre)} value={this.state.datosEditarContacto.Nombre} onChange={(e)=>{\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Nombre = e.target.value;\r\n              this.setState({datosEditarContacto});\r\n              }} required=\"true\" maxlength=\"100\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullNombre: 'true'});\r\n                }else {\r\n                  this.setState({isNullNombre: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Celular\">Celular</Label>\r\n            <Input  id=\"Celular\" style={this.validacionInput(this.state.isNullCelular)} value={this.state.datosEditarContacto.Celular} onChange={(e)=>{\r\n               var regex = /[^+\\d]/g;\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Celular = e.target.value.replace(regex,\"\");\r\n              this.setState({datosEditarContacto});\r\n              }} required=\"true\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullCelular: 'true'});\r\n                }else {\r\n                  this.setState({isNullCelular: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"Sexo\">Sexo</Label>\r\n            <Input id=\"Sexo\" style={this.validacionInput(this.state.isNullSexo)}  value={this.state.datosEditarContacto.Sexo} onChange={(e)=>{\r\n              let {datosEditarContacto} = this.state;\r\n              datosEditarContacto.Sexo = e.target.value;\r\n              this.setState({datosEditarContacto});\r\n              }} required=\"true\"  maxlength=\"3\" minlength=\"3\" onBlur={(e)=>{\r\n                if (e.target.value == '')\r\n                {\r\n                  this.setState({isNullSexo: 'true'});\r\n                }else {\r\n                  this.setState({isNullSexo: 'false'});\r\n                }\r\n              }}/>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.actualizarContacto.bind(this)}>\r\n            {loading?<FontAwesomeIcon className=\"mr-2\" icon=\"sync-alt\" spin />: <FontAwesomeIcon className=\"mr-2\" icon=\"database\" />}\r\n            Guardar\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={this.toggleEditarContactoModal.bind(this)}>\r\n            <FontAwesomeIcon className=\"mr-2\" icon=\"times\" />\r\n            Cancelar\r\n          </Button>\r\n        </ModalFooter>\r\n       </Modal>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Nombre</th>\r\n              <th>Celular</th>\r\n              <th>Sexo</th>\r\n              <th>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contactosReg}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state)\r\n{\r\n  return {\r\n    contactos: state.contactos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchContactos, saveContactos, updateContactos, deleteContactos})(Contactos);\r\n","import React, {Component, Fragment, lazy, Suspense} from 'react';\r\nimport {Nav, NavItem} from 'reactstrap';\r\nimport {withRouter,NavLink} from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\n\r\nclass NavMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false\r\n    };\r\n     this.changeNavItem = this.changeNavItem.bind(this);\r\n  }\r\n\r\ncomponentDidMount(){\r\n\r\n  if (this.props.location.pathname != null)\r\n    this.changeNavItem(this.props.location.pathname);\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps){\r\n\r\n if(this.props.location.pathname !== nextProps.location.pathname){\r\n   this.changeNavItem(nextProps.location.pathname);\r\n  }\r\n}\r\n\r\nchangeNavItem(currentRoute){\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  let loggedIn = true;\r\n  if (token==null){\r\n    loggedIn = false;\r\n  }\r\n\r\n  this.setState({\r\n    loggedIn: loggedIn\r\n  });\r\n\r\n}\r\n  render() {\r\n    if(this.state.loggedIn===true)\r\n    {\r\n      var letLogout = (\r\n        <Fragment>\r\n          <NavItem>\r\n            <NavLink className=\"nav-link\" to=\"/cerrarSesion\">Cerrar sesion</NavLink>\r\n          </NavItem>\r\n         </Fragment>\r\n      )\r\n    }\r\n    else  {\r\n       var letLogin = (\r\n         <Fragment>\r\n             <NavItem>\r\n               <NavLink className=\"nav-link\" to=\"/iniciarSesion\">Iniciar sesión</NavLink>\r\n             </NavItem>\r\n             <NavItem>\r\n               <NavLink className=\"nav-link\" to=\"/registrarUsuario\">Registrar Usuario</NavLink>\r\n             </NavItem>\r\n        </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav pills location={this.props.location}>\r\n            <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/\">Aplicación de Contactos</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/contactos\">Contactos</NavLink>\r\n              </NavItem>\r\n                {letLogout}\r\n                {letLogin}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavMenu);\r\n","import React, {Component} from 'react';\r\n/*import Navegacion from './Navegacion';*/\r\nclass Home extends Component  {\r\n\r\n  render(){\r\n      return (\r\n\r\n        <div id=\"divHome\">\r\n\r\n          <div className=\"App container\">\r\n\r\n            <h3>Aplicación de React con Redux y Apis de seguridad y contactos en ASP NET Core 2.2 </h3>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component, Fragment} from 'react';\nimport {BrowserRouter as Routers, Switch, Route, withRouter, Link } from 'react-router-dom';\nimport IniciarSesion from './componentes/seguridad/IniciarSesion';\nimport CerrarSesion from './componentes/seguridad/CerrarSesion';\nimport RegistrarUsuario from './componentes/seguridad/RegistrarUsuario';\nimport Contactos from './componentes/Contactos';\nimport NavMenu from './componentes/NavMenu';\nimport Home from './componentes/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport MDSpinner from \"react-md-spinner\";\nimport { faCheckSquare, faCoffee, faTrashAlt, faExclamationTriangle, faTimes, faCheck, faUserCircle, faKey, faSignInAlt, faDatabase, faSyncAlt} from '@fortawesome/free-solid-svg-icons';\n\n//Una Clase que extiende del component de React se comvierte en una etiqueta html\nclass App extends Component  {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLoading:true\n    }\n  }\n  componentDidMount()\n  {\n    //Este metodo se ejecuta despues de componentWillMount, si esta variable se setea a false en componentWillMount\n    // la variable llega a true cuando se renderiza el menú y ya no se mostraría el spinner caundo se cargue la página\n    this.setState({isLoading:false});\n  }\n  render(){\n    library.add(fab, faCheckSquare, faCoffee, faTrashAlt, faExclamationTriangle, faTimes, faCheck, faUserCircle, faKey, faSignInAlt, faDatabase, faSyncAlt) ;\n      if (this.state.isLoading){\n        return  <MDSpinner className=\"spinner\" size={50}/>\n      }\n      return(\n        <div className=\"App\">        \n          <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n          <body>\n            <Routers>\n              <Switch>\n                <Fragment>\n                  <NavMenu location={this.props.location}></NavMenu>\n                  <Route exact path=\"/\" component={Home}></Route>\n                  <Route path=\"/iniciarSesion\" component={IniciarSesion}></Route>\n                  <Route path=\"/registrarUsuario\" component={RegistrarUsuario}></Route>\n                  <Route path=\"/contactos\" component={Contactos}></Route>\n                  <Route path=\"/cerrarSesion\" component={CerrarSesion}></Route>\n                </Fragment>\n              </Switch>\n            </Routers> \n          </body>\n        </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import  {combineReducers} from 'redux';\r\nimport   contactos from './reducers/contactos';\r\nimport   usuarios from './reducers/usuarios';\r\n\r\nexport default combineReducers({\r\n    contactos,\r\n    usuarios\r\n});\r\n","import { SET_CONTACTOS, ADD_CONTACTOS, UPDATE_CONTACTOS, DELETE_CONTACTOS } from \"../actions/actionsContactos\";\r\n\r\nexport default function contactos(state = [], action = {}){\r\n         \r\n    switch(action.type){\r\n        case SET_CONTACTOS:\r\n            return action.contactos;\r\n        case ADD_CONTACTOS:\r\n            return [\r\n                ...state,\r\n                    action.contactos\r\n            ];\r\n        case UPDATE_CONTACTOS:\r\n            return state.map(item => {\r\n                if (item.Id === action.contactos.Id) return action.contactos;\r\n                return item;\r\n            })\r\n        case DELETE_CONTACTOS:\r\n            return state.filter(item => item.Id != action.Id);\r\n\r\n        default: return state;\r\n    }\r\n}","\r\nimport {ADD_USUARIOS} from \"../actions/actionsUsuarios\";\r\n\r\n\r\nexport default function usuarios (state = [], action = {}){\r\n    switch(action.type){      \r\n        case ADD_USUARIOS:\r\n            return [\r\n                ...state,\r\n                    action.usuarios\r\n            ];\r\n        \r\n        default: return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware}  from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\n\nconst store =  createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}